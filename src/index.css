/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
    @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
      *, :before, :after, ::backdrop {
        --tw-rotate-x: rotateX(0);
        --tw-rotate-y: rotateY(0);
        --tw-rotate-z: rotateZ(0);
        --tw-skew-x: skewX(0);
        --tw-skew-y: skewY(0);
        --tw-space-y-reverse: 0;
        --tw-border-style: solid;
        --tw-gradient-position: initial;
        --tw-gradient-from: #0000;
        --tw-gradient-via: #0000;
        --tw-gradient-to: #0000;
        --tw-gradient-stops: initial;
        --tw-gradient-via-stops: initial;
        --tw-gradient-from-position: 0%;
        --tw-gradient-via-position: 50%;
        --tw-gradient-to-position: 100%;
        --tw-leading: initial;
        --tw-font-weight: initial;
        --tw-shadow: 0 0 #0000;
        --tw-shadow-color: initial;
        --tw-shadow-alpha: 100%;
        --tw-inset-shadow: 0 0 #0000;
        --tw-inset-shadow-color: initial;
        --tw-inset-shadow-alpha: 100%;
        --tw-ring-color: initial;
        --tw-ring-shadow: 0 0 #0000;
        --tw-inset-ring-color: initial;
        --tw-inset-ring-shadow: 0 0 #0000;
        --tw-ring-inset: initial;
        --tw-ring-offset-width: 0px;
        --tw-ring-offset-color: #fff;
        --tw-ring-offset-shadow: 0 0 #0000;
        --tw-outline-style: solid;
        --tw-backdrop-blur: initial;
        --tw-backdrop-brightness: initial;
        --tw-backdrop-contrast: initial;
        --tw-backdrop-grayscale: initial;
        --tw-backdrop-hue-rotate: initial;
        --tw-backdrop-invert: initial;
        --tw-backdrop-opacity: initial;
        --tw-backdrop-saturate: initial;
        --tw-backdrop-sepia: initial;
        --tw-duration: initial;
        --tw-translate-x: 0;
        --tw-translate-y: 0;
        --tw-translate-z: 0;
        --tw-scale-x: 1;
        --tw-scale-y: 1;
        --tw-scale-z: 1;
      }
    }
  }
  
  @layer theme {
    :root, :host {
      --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
      --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
      --color-orange-50: oklch(.98 .016 73.684);
      --color-orange-200: oklch(.901 .076 70.697);
      --color-orange-500: oklch(.705 .213 47.604);
      --color-orange-600: oklch(.646 .222 41.116);
      --color-green-300: oklch(.871 .15 154.449);
      --color-green-600: oklch(.627 .194 149.214);
      --color-teal-50: oklch(.984 .014 180.72);
      --color-teal-100: oklch(.953 .051 180.801);
      --color-teal-200: oklch(.91 .096 180.426);
      --color-teal-300: oklch(.855 .138 181.071);
      --color-teal-400: oklch(.777 .152 181.912);
      --color-teal-500: oklch(.704 .14 182.503);
      --color-teal-700: oklch(.511 .096 186.391);
      --color-blue-50: oklch(.97 .014 254.604);
      --color-blue-200: oklch(.882 .059 254.128);
      --color-blue-400: oklch(.707 .165 254.624);
      --color-blue-500: oklch(.623 .214 259.815);
      --color-blue-600: oklch(.546 .245 262.881);
      --color-blue-700: oklch(.488 .243 264.376);
      --color-pink-50: oklch(.971 .014 343.198);
      --color-pink-500: oklch(.656 .241 354.308);
      --color-gray-100: oklch(.967 .003 264.542);
      --color-white: #fff;
      --spacing: .25rem;
      --container-md: 28rem;
      --container-2xl: 42rem;
      --container-4xl: 56rem;
      --container-6xl: 72rem;
      --text-xs: .75rem;
      --text-xs--line-height: calc(1 / .75);
      --text-sm: .875rem;
      --text-sm--line-height: calc(1.25 / .875);
      --text-base: 1rem;
      --text-lg: 1.125rem;
      --text-xl: 1.25rem;
      --text-2xl: 1.5rem;
      --font-weight-normal: 400;
      --font-weight-medium: 500;
      --blur-sm: 8px;
      --default-transition-duration: .15s;
      --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
      --default-font-family: var(--font-sans);
      --default-font-feature-settings: var(--font-sans--font-feature-settings);
      --default-font-variation-settings: var(--font-sans--font-variation-settings);
      --default-mono-font-family: var(--font-mono);
      --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
      --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
    }
  }
  
  @layer base {
    *, :after, :before, ::backdrop {
      box-sizing: border-box;
      border: 0 solid;
      margin: 0;
      padding: 0;
    }
  
    ::file-selector-button {
      box-sizing: border-box;
      border: 0 solid;
      margin: 0;
      padding: 0;
    }
  
    html, :host {
      -webkit-text-size-adjust: 100%;
      tab-size: 4;
      line-height: 1.5;
      font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
      font-feature-settings: var(--default-font-feature-settings, normal);
      font-variation-settings: var(--default-font-variation-settings, normal);
      -webkit-tap-highlight-color: transparent;
    }
  
    body {
      line-height: inherit;
    }
  
    hr {
      height: 0;
      color: inherit;
      border-top-width: 1px;
    }
  
    abbr:where([title]) {
      -webkit-text-decoration: underline dotted;
      text-decoration: underline dotted;
    }
  
    h1, h2, h3, h4, h5, h6 {
      font-size: inherit;
      font-weight: inherit;
    }
  
    a {
      color: inherit;
      -webkit-text-decoration: inherit;
      -webkit-text-decoration: inherit;
      text-decoration: inherit;
    }
  
    b, strong {
      font-weight: bolder;
    }
  
    code, kbd, samp, pre {
      font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
      font-feature-settings: var(--default-mono-font-feature-settings, normal);
      font-variation-settings: var(--default-mono-font-variation-settings, normal);
      font-size: 1em;
    }
  
    small {
      font-size: 80%;
    }
  
    sub, sup {
      vertical-align: baseline;
      font-size: 75%;
      line-height: 0;
      position: relative;
    }
  
    sub {
      bottom: -.25em;
    }
  
    sup {
      top: -.5em;
    }
  
    table {
      text-indent: 0;
      border-color: inherit;
      border-collapse: collapse;
    }
  
    :-moz-focusring {
      outline: auto;
    }
  
    progress {
      vertical-align: baseline;
    }
  
    summary {
      display: list-item;
    }
  
    ol, ul, menu {
      list-style: none;
    }
  
    img, svg, video, canvas, audio, iframe, embed, object {
      vertical-align: middle;
      display: block;
    }
  
    img, video {
      max-width: 100%;
      height: auto;
    }
  
    button, input, select, optgroup, textarea {
      font: inherit;
      font-feature-settings: inherit;
      font-variation-settings: inherit;
      letter-spacing: inherit;
      color: inherit;
      opacity: 1;
      background-color: #0000;
      border-radius: 0;
    }
  
    ::file-selector-button {
      font: inherit;
      font-feature-settings: inherit;
      font-variation-settings: inherit;
      letter-spacing: inherit;
      color: inherit;
      opacity: 1;
      background-color: #0000;
      border-radius: 0;
    }
  
    :where(select:is([multiple], [size])) optgroup {
      font-weight: bolder;
    }
  
    :where(select:is([multiple], [size])) optgroup option {
      padding-inline-start: 20px;
    }
  
    ::file-selector-button {
      margin-inline-end: 4px;
    }
  
    ::placeholder {
      opacity: 1;
      color: currentColor;
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentColor 50%, transparent);
      }
    }
  
    textarea {
      resize: vertical;
    }
  
    ::-webkit-search-decoration {
      -webkit-appearance: none;
    }
  
    ::-webkit-date-and-time-value {
      min-height: 1lh;
      text-align: inherit;
    }
  
    ::-webkit-datetime-edit {
      display: inline-flex;
    }
  
    ::-webkit-datetime-edit-fields-wrapper {
      padding: 0;
    }
  
    ::-webkit-datetime-edit {
      padding-block: 0;
    }
  
    ::-webkit-datetime-edit-year-field {
      padding-block: 0;
    }
  
    ::-webkit-datetime-edit-month-field {
      padding-block: 0;
    }
  
    ::-webkit-datetime-edit-day-field {
      padding-block: 0;
    }
  
    ::-webkit-datetime-edit-hour-field {
      padding-block: 0;
    }
  
    ::-webkit-datetime-edit-minute-field {
      padding-block: 0;
    }
  
    ::-webkit-datetime-edit-second-field {
      padding-block: 0;
    }
  
    ::-webkit-datetime-edit-millisecond-field {
      padding-block: 0;
    }
  
    ::-webkit-datetime-edit-meridiem-field {
      padding-block: 0;
    }
  
    :-moz-ui-invalid {
      box-shadow: none;
    }
  
    button, input:where([type="button"], [type="reset"], [type="submit"]) {
      appearance: button;
    }
  
    ::file-selector-button {
      appearance: button;
    }
  
    ::-webkit-inner-spin-button {
      height: auto;
    }
  
    ::-webkit-outer-spin-button {
      height: auto;
    }
  
    [hidden]:where(:not([hidden="until-found"])) {
      display: none !important;
    }
  
    * {
      border-color: var(--border);
      outline-color: var(--ring);
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      * {
        outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  
    * {
      border-color: var(--border);
      outline-color: var(--ring);
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      * {
        outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  
    body {
      background-color: var(--background);
      color: var(--foreground);
    }
  
    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
      font-size: var(--text-2xl);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }
  
    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
      font-size: var(--text-xl);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }
  
    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
      font-size: var(--text-lg);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }
  
    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
      font-size: var(--text-base);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }
  
    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
      font-size: var(--text-base);
      font-weight: var(--font-weight-normal);
      line-height: 1.5;
    }
  
    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
      font-size: var(--text-base);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }
  
    :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input {
      font-size: var(--text-base);
      font-weight: var(--font-weight-normal);
      line-height: 1.5;
    }
  }
  
  @layer utilities {
    .\@container\/card-header {
      container: card-header / inline-size;
    }
  
    .absolute {
      position: absolute;
    }
  
    .relative {
      position: relative;
    }
  
    .sticky {
      position: sticky;
    }
  
    .top-0 {
      top: calc(var(--spacing) * 0);
    }
  
    .top-3 {
      top: calc(var(--spacing) * 3);
    }
  
    .top-6 {
      top: calc(var(--spacing) * 6);
    }
  
    .left-3 {
      left: calc(var(--spacing) * 3);
    }
  
    .left-6 {
      left: calc(var(--spacing) * 6);
    }
  
    .z-10 {
      z-index: 10;
    }
  
    .col-start-2 {
      grid-column-start: 2;
    }
  
    .row-span-2 {
      grid-row: span 2 / span 2;
    }
  
    .row-start-1 {
      grid-row-start: 1;
    }
  
    .mx-auto {
      margin-inline: auto;
    }
  
    .mt-1 {
      margin-top: calc(var(--spacing) * 1);
    }
  
    .mt-2 {
      margin-top: calc(var(--spacing) * 2);
    }
  
    .mt-12 {
      margin-top: calc(var(--spacing) * 12);
    }
  
    .mr-2 {
      margin-right: calc(var(--spacing) * 2);
    }
  
    .mb-2 {
      margin-bottom: calc(var(--spacing) * 2);
    }
  
    .mb-3 {
      margin-bottom: calc(var(--spacing) * 3);
    }
  
    .mb-4 {
      margin-bottom: calc(var(--spacing) * 4);
    }
  
    .mb-6 {
      margin-bottom: calc(var(--spacing) * 6);
    }
  
    .mb-8 {
      margin-bottom: calc(var(--spacing) * 8);
    }
  
    .mb-12 {
      margin-bottom: calc(var(--spacing) * 12);
    }
  
    .line-clamp-2 {
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      display: -webkit-box;
      overflow: hidden;
    }
  
    .line-clamp-3 {
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      display: -webkit-box;
      overflow: hidden;
    }
  
    .flex {
      display: flex;
    }
  
    .grid {
      display: grid;
    }
  
    .hidden {
      display: none;
    }
  
    .inline-block {
      display: inline-block;
    }
  
    .inline-flex {
      display: inline-flex;
    }
  
    .size-4 {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  
    .size-9 {
      width: calc(var(--spacing) * 9);
      height: calc(var(--spacing) * 9);
    }
  
    .h-4 {
      height: calc(var(--spacing) * 4);
    }
  
    .h-5 {
      height: calc(var(--spacing) * 5);
    }
  
    .h-8 {
      height: calc(var(--spacing) * 8);
    }
  
    .h-9 {
      height: calc(var(--spacing) * 9);
    }
  
    .h-10 {
      height: calc(var(--spacing) * 10);
    }
  
    .h-48 {
      height: calc(var(--spacing) * 48);
    }
  
    .h-96 {
      height: calc(var(--spacing) * 96);
    }
  
    .h-full {
      height: 100%;
    }
  
    .min-h-screen {
      min-height: 100vh;
    }
  
    .w-4 {
      width: calc(var(--spacing) * 4);
    }
  
    .w-5 {
      width: calc(var(--spacing) * 5);
    }
  
    .w-fit {
      width: fit-content;
    }
  
    .w-full {
      width: 100%;
    }
  
    .max-w-2xl {
      max-width: var(--container-2xl);
    }
  
    .max-w-4xl {
      max-width: var(--container-4xl);
    }
  
    .max-w-6xl {
      max-width: var(--container-6xl);
    }
  
    .max-w-md {
      max-width: var(--container-md);
    }
  
    .max-w-none {
      max-width: none;
    }
  
    .shrink-0 {
      flex-shrink: 0;
    }
  
    .transform {
      transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    }
  
    .cursor-pointer {
      cursor: pointer;
    }
  
    .list-inside {
      list-style-position: inside;
    }
  
    .list-disc {
      list-style-type: disc;
    }
  
    .auto-rows-min {
      grid-auto-rows: min-content;
    }
  
    .grid-rows-\[auto_auto\] {
      grid-template-rows: auto auto;
    }
  
    .flex-col {
      flex-direction: column;
    }
  
    .flex-wrap {
      flex-wrap: wrap;
    }
  
    .items-center {
      align-items: center;
    }
  
    .items-start {
      align-items: flex-start;
    }
  
    .justify-between {
      justify-content: space-between;
    }
  
    .justify-center {
      justify-content: center;
    }
  
    .gap-1 {
      gap: calc(var(--spacing) * 1);
    }
  
    .gap-1\.5 {
      gap: calc(var(--spacing) * 1.5);
    }
  
    .gap-2 {
      gap: calc(var(--spacing) * 2);
    }
  
    .gap-4 {
      gap: calc(var(--spacing) * 4);
    }
  
    .gap-6 {
      gap: calc(var(--spacing) * 6);
    }
  
    :where(.space-y-2 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  
    :where(.space-y-6 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  
    .self-start {
      align-self: flex-start;
    }
  
    .justify-self-end {
      justify-self: flex-end;
    }
  
    .truncate {
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
    }
  
    .overflow-hidden {
      overflow: hidden;
    }
  
    .rounded-lg {
      border-radius: var(--radius);
    }
  
    .rounded-md {
      border-radius: calc(var(--radius)  - 2px);
    }
  
    .rounded-xl {
      border-radius: calc(var(--radius)  + 4px);
    }
  
    .border {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  
    .border-2 {
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  
    .border-t {
      border-top-style: var(--tw-border-style);
      border-top-width: 1px;
    }
  
    .border-t-2 {
      border-top-style: var(--tw-border-style);
      border-top-width: 2px;
    }
  
    .border-t-4 {
      border-top-style: var(--tw-border-style);
      border-top-width: 4px;
    }
  
    .border-b {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 1px;
    }
  
    .border-b-2 {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 2px;
    }
  
    .border-b-4 {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 4px;
    }
  
    .border-dashed {
      --tw-border-style: dashed;
      border-style: dashed;
    }
  
    .border-blue-200 {
      border-color: var(--color-blue-200);
    }
  
    .border-blue-400 {
      border-color: var(--color-blue-400);
    }
  
    .border-green-300 {
      border-color: var(--color-green-300);
    }
  
    .border-orange-200 {
      border-color: var(--color-orange-200);
    }
  
    .border-teal-100 {
      border-color: var(--color-teal-100);
    }
  
    .border-teal-200 {
      border-color: var(--color-teal-200);
    }
  
    .border-teal-300 {
      border-color: var(--color-teal-300);
    }
  
    .border-teal-400 {
      border-color: var(--color-teal-400);
    }
  
    .border-transparent {
      border-color: #0000;
    }
  
    .bg-background {
      background-color: var(--background);
    }
  
    .bg-card {
      background-color: var(--card);
    }
  
    .bg-destructive {
      background-color: var(--destructive);
    }
  
    .bg-gray-100 {
      background-color: var(--color-gray-100);
    }
  
    .bg-primary {
      background-color: var(--primary);
    }
  
    .bg-secondary {
      background-color: var(--secondary);
    }
  
    .bg-teal-100 {
      background-color: var(--color-teal-100);
    }
  
    .bg-white {
      background-color: var(--color-white);
    }
  
    .bg-white\/50 {
      background-color: #ffffff80;
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      .bg-white\/50 {
        background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  
    .bg-white\/60 {
      background-color: #fff9;
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      .bg-white\/60 {
        background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
      }
    }
  
    .bg-white\/80 {
      background-color: #fffc;
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      .bg-white\/80 {
        background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
      }
    }
  
    .bg-white\/90 {
      background-color: #ffffffe6;
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      .bg-white\/90 {
        background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
      }
    }
  
    .bg-gradient-to-br {
      --tw-gradient-position: to bottom right in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  
    .bg-gradient-to-r {
      --tw-gradient-position: to right in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  
    .from-blue-50 {
      --tw-gradient-from: var(--color-blue-50);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  
    .from-blue-500 {
      --tw-gradient-from: var(--color-blue-500);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  
    .from-blue-600 {
      --tw-gradient-from: var(--color-blue-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  
    .from-pink-50 {
      --tw-gradient-from: var(--color-pink-50);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  
    .via-green-600 {
      --tw-gradient-via: var(--color-green-600);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  
    .via-pink-50 {
      --tw-gradient-via: var(--color-pink-50);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  
    .via-pink-500 {
      --tw-gradient-via: var(--color-pink-500);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  
    .via-teal-50 {
      --tw-gradient-via: var(--color-teal-50);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  
    .via-teal-500 {
      --tw-gradient-via: var(--color-teal-500);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  
    .to-orange-50 {
      --tw-gradient-to: var(--color-orange-50);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  
    .to-orange-500 {
      --tw-gradient-to: var(--color-orange-500);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  
    .to-orange-600 {
      --tw-gradient-to: var(--color-orange-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  
    .to-teal-50 {
      --tw-gradient-to: var(--color-teal-50);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  
    .bg-clip-text {
      background-clip: text;
    }
  
    .object-cover {
      object-fit: cover;
    }
  
    .p-6 {
      padding: calc(var(--spacing) * 6);
    }
  
    .p-8 {
      padding: calc(var(--spacing) * 8);
    }
  
    .px-2 {
      padding-inline: calc(var(--spacing) * 2);
    }
  
    .px-3 {
      padding-inline: calc(var(--spacing) * 3);
    }
  
    .px-4 {
      padding-inline: calc(var(--spacing) * 4);
    }
  
    .px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  
    .py-0\.5 {
      padding-block: calc(var(--spacing) * .5);
    }
  
    .py-2 {
      padding-block: calc(var(--spacing) * 2);
    }
  
    .py-6 {
      padding-block: calc(var(--spacing) * 6);
    }
  
    .py-8 {
      padding-block: calc(var(--spacing) * 8);
    }
  
    .py-12 {
      padding-block: calc(var(--spacing) * 12);
    }
  
    .pt-4 {
      padding-top: calc(var(--spacing) * 4);
    }
  
    .pt-6 {
      padding-top: calc(var(--spacing) * 6);
    }
  
    .pt-8 {
      padding-top: calc(var(--spacing) * 8);
    }
  
    .pb-6 {
      padding-bottom: calc(var(--spacing) * 6);
    }
  
    .pb-8 {
      padding-bottom: calc(var(--spacing) * 8);
    }
  
    .text-center {
      text-align: center;
    }
  
    .align-middle {
      vertical-align: middle;
    }
  
    .text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  
    .text-xs {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  
    .leading-none {
      --tw-leading: 1;
      line-height: 1;
    }
  
    .font-medium {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  
    .whitespace-nowrap {
      white-space: nowrap;
    }
  
    .text-blue-600 {
      color: var(--color-blue-600);
    }
  
    .text-blue-700 {
      color: var(--color-blue-700);
    }
  
    .text-card-foreground {
      color: var(--card-foreground);
    }
  
    .text-foreground {
      color: var(--foreground);
    }
  
    .text-muted-foreground {
      color: var(--muted-foreground);
    }
  
    .text-primary {
      color: var(--primary);
    }
  
    .text-primary-foreground {
      color: var(--primary-foreground);
    }
  
    .text-secondary-foreground {
      color: var(--secondary-foreground);
    }
  
    .text-teal-700 {
      color: var(--color-teal-700);
    }
  
    .text-transparent {
      color: #0000;
    }
  
    .text-white {
      color: var(--color-white);
    }
  
    .italic {
      font-style: italic;
    }
  
    .underline-offset-4 {
      text-underline-offset: 4px;
    }
  
    .shadow-sm {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  
    .outline {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  
    .backdrop-blur-sm {
      --tw-backdrop-blur: blur(var(--blur-sm));
      -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
      backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    }
  
    .transition-\[color\,box-shadow\] {
      transition-property: color, box-shadow;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  
    .transition-all {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  
    .transition-transform {
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  
    .duration-300 {
      --tw-duration: .3s;
      transition-duration: .3s;
    }
  
    .outline-none {
      --tw-outline-style: none;
      outline-style: none;
    }
  
    @media (hover: hover) {
      .hover\:-translate-y-1:hover {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  
    @media (hover: hover) {
      .hover\:scale-110:hover {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  
    @media (hover: hover) {
      .hover\:border-teal-300:hover {
        border-color: var(--color-teal-300);
      }
    }
  
    @media (hover: hover) {
      .hover\:bg-accent:hover {
        background-color: var(--accent);
      }
    }
  
    @media (hover: hover) {
      .hover\:bg-destructive\/90:hover {
        background-color: var(--destructive);
      }
  
      @supports (color: color-mix(in lab, red, red)) {
        .hover\:bg-destructive\/90:hover {
          background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
      }
    }
  
    @media (hover: hover) {
      .hover\:bg-primary\/90:hover {
        background-color: var(--primary);
      }
  
      @supports (color: color-mix(in lab, red, red)) {
        .hover\:bg-primary\/90:hover {
          background-color: color-mix(in oklab, var(--primary) 90%, transparent);
        }
      }
    }
  
    @media (hover: hover) {
      .hover\:bg-secondary\/80:hover {
        background-color: var(--secondary);
      }
  
      @supports (color: color-mix(in lab, red, red)) {
        .hover\:bg-secondary\/80:hover {
          background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
        }
      }
    }
  
    @media (hover: hover) {
      .hover\:bg-teal-100:hover {
        background-color: var(--color-teal-100);
      }
    }
  
    @media (hover: hover) {
      .hover\:bg-white\/80:hover {
        background-color: #fffc;
      }
  
      @supports (color: color-mix(in lab, red, red)) {
        .hover\:bg-white\/80:hover {
          background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
      }
    }
  
    @media (hover: hover) {
      .hover\:text-accent-foreground:hover {
        color: var(--accent-foreground);
      }
    }
  
    @media (hover: hover) {
      .hover\:underline:hover {
        text-decoration-line: underline;
      }
    }
  
    @media (hover: hover) {
      .hover\:shadow-xl:hover {
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  
    .focus-visible\:border-ring:focus-visible {
      border-color: var(--ring);
    }
  
    .focus-visible\:ring-\[3px\]:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: var(--destructive);
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      .focus-visible\:ring-destructive\/20:focus-visible {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: var(--ring);
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      .focus-visible\:ring-ring\/50:focus-visible {
        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  
    .disabled\:pointer-events-none:disabled {
      pointer-events: none;
    }
  
    .disabled\:opacity-50:disabled {
      opacity: .5;
    }
  
    .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot="card-action"]) {
      grid-template-columns: 1fr auto;
    }
  
    .has-\[\>svg\]\:px-2\.5:has( > svg) {
      padding-inline: calc(var(--spacing) * 2.5);
    }
  
    .has-\[\>svg\]\:px-3:has( > svg) {
      padding-inline: calc(var(--spacing) * 3);
    }
  
    .has-\[\>svg\]\:px-4:has( > svg) {
      padding-inline: calc(var(--spacing) * 4);
    }
  
    .aria-invalid\:border-destructive[aria-invalid="true"] {
      border-color: var(--destructive);
    }
  
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  
    @media (width >= 48rem) {
      .md\:flex {
        display: flex;
      }
    }
  
    @media (width >= 48rem) {
      .md\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
      }
    }
  
    @media (width >= 48rem) {
      .md\:p-12 {
        padding: calc(var(--spacing) * 12);
      }
    }
  
    @media (width >= 64rem) {
      .lg\:grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
      }
    }
  
    .dark\:border-input:is(.dark *) {
      border-color: var(--input);
    }
  
    .dark\:bg-destructive\/60:is(.dark *) {
      background-color: var(--destructive);
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:bg-destructive\/60:is(.dark *) {
        background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
  
    .dark\:bg-input\/30:is(.dark *) {
      background-color: var(--input);
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:bg-input\/30:is(.dark *) {
        background-color: color-mix(in oklab, var(--input) 30%, transparent);
      }
    }
  
    @media (hover: hover) {
      .dark\:hover\:bg-accent\/50:is(.dark *):hover {
        background-color: var(--accent);
      }
  
      @supports (color: color-mix(in lab, red, red)) {
        .dark\:hover\:bg-accent\/50:is(.dark *):hover {
          background-color: color-mix(in oklab, var(--accent) 50%, transparent);
        }
      }
    }
  
    @media (hover: hover) {
      .dark\:hover\:bg-input\/50:is(.dark *):hover {
        background-color: var(--input);
      }
  
      @supports (color: color-mix(in lab, red, red)) {
        .dark\:hover\:bg-input\/50:is(.dark *):hover {
          background-color: color-mix(in oklab, var(--input) 50%, transparent);
        }
      }
    }
  
    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
      --tw-ring-color: var(--destructive);
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
      }
    }
  
    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
    }
  
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
      }
    }
  
    .\[\&_svg\]\:pointer-events-none svg {
      pointer-events: none;
    }
  
    .\[\&_svg\]\:shrink-0 svg {
      flex-shrink: 0;
    }
  
    .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  
    .\[\.border-b\]\:pb-6.border-b {
      padding-bottom: calc(var(--spacing) * 6);
    }
  
    .\[\.border-t\]\:pt-6.border-t {
      padding-top: calc(var(--spacing) * 6);
    }
  
    .\[\&\:last-child\]\:pb-6:last-child {
      padding-bottom: calc(var(--spacing) * 6);
    }
  
    .\[\&\>svg\]\:pointer-events-none > svg {
      pointer-events: none;
    }
  
    .\[\&\>svg\]\:size-3 > svg {
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
  
    @media (hover: hover) {
      a.\[a\&\]\:hover\:bg-accent:hover {
        background-color: var(--accent);
      }
    }
  
    @media (hover: hover) {
      a.\[a\&\]\:hover\:bg-destructive\/90:hover {
        background-color: var(--destructive);
      }
  
      @supports (color: color-mix(in lab, red, red)) {
        a.\[a\&\]\:hover\:bg-destructive\/90:hover {
          background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
      }
    }
  
    @media (hover: hover) {
      a.\[a\&\]\:hover\:bg-primary\/90:hover {
        background-color: var(--primary);
      }
  
      @supports (color: color-mix(in lab, red, red)) {
        a.\[a\&\]\:hover\:bg-primary\/90:hover {
          background-color: color-mix(in oklab, var(--primary) 90%, transparent);
        }
      }
    }
  
    @media (hover: hover) {
      a.\[a\&\]\:hover\:bg-secondary\/90:hover {
        background-color: var(--secondary);
      }
  
      @supports (color: color-mix(in lab, red, red)) {
        a.\[a\&\]\:hover\:bg-secondary\/90:hover {
          background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
        }
      }
    }
  
    @media (hover: hover) {
      a.\[a\&\]\:hover\:text-accent-foreground:hover {
        color: var(--accent-foreground);
      }
    }
  }
  
  :root {
    --font-size: 16px;
    --background: #fff;
    --foreground: oklch(.145 0 0);
    --card: #fff;
    --card-foreground: oklch(.145 0 0);
    --popover: oklch(1 0 0);
    --popover-foreground: oklch(.145 0 0);
    --primary: #030213;
    --primary-foreground: oklch(1 0 0);
    --secondary: oklch(.95 .0058 264.53);
    --secondary-foreground: #030213;
    --muted: #ececf0;
    --muted-foreground: #717182;
    --accent: #e9ebef;
    --accent-foreground: #030213;
    --destructive: #d4183d;
    --destructive-foreground: #fff;
    --border: #0000001a;
    --input: transparent;
    --input-background: #f3f3f5;
    --switch-background: #cbced4;
    --font-weight-medium: 500;
    --font-weight-normal: 400;
    --ring: oklch(.708 0 0);
    --chart-1: oklch(.646 .222 41.116);
    --chart-2: oklch(.6 .118 184.704);
    --chart-3: oklch(.398 .07 227.392);
    --chart-4: oklch(.828 .189 84.429);
    --chart-5: oklch(.769 .188 70.08);
    --radius: .625rem;
    --sidebar: oklch(.985 0 0);
    --sidebar-foreground: oklch(.145 0 0);
    --sidebar-primary: #030213;
    --sidebar-primary-foreground: oklch(.985 0 0);
    --sidebar-accent: oklch(.97 0 0);
    --sidebar-accent-foreground: oklch(.205 0 0);
    --sidebar-border: oklch(.922 0 0);
    --sidebar-ring: oklch(.708 0 0);
  }
  
  .dark {
    --background: oklch(.145 0 0);
    --foreground: oklch(.985 0 0);
    --card: oklch(.145 0 0);
    --card-foreground: oklch(.985 0 0);
    --popover: oklch(.145 0 0);
    --popover-foreground: oklch(.985 0 0);
    --primary: oklch(.985 0 0);
    --primary-foreground: oklch(.205 0 0);
    --secondary: oklch(.269 0 0);
    --secondary-foreground: oklch(.985 0 0);
    --muted: oklch(.269 0 0);
    --muted-foreground: oklch(.708 0 0);
    --accent: oklch(.269 0 0);
    --accent-foreground: oklch(.985 0 0);
    --destructive: oklch(.396 .141 25.723);
    --destructive-foreground: oklch(.637 .237 25.331);
    --border: oklch(.269 0 0);
    --input: oklch(.269 0 0);
    --ring: oklch(.439 0 0);
    --font-weight-medium: 500;
    --font-weight-normal: 400;
    --chart-1: oklch(.488 .243 264.376);
    --chart-2: oklch(.696 .17 162.48);
    --chart-3: oklch(.769 .188 70.08);
    --chart-4: oklch(.627 .265 303.9);
    --chart-5: oklch(.645 .246 16.439);
    --sidebar: oklch(.205 0 0);
    --sidebar-foreground: oklch(.985 0 0);
    --sidebar-primary: oklch(.488 .243 264.376);
    --sidebar-primary-foreground: oklch(.985 0 0);
    --sidebar-accent: oklch(.269 0 0);
    --sidebar-accent-foreground: oklch(.985 0 0);
    --sidebar-border: oklch(.269 0 0);
    --sidebar-ring: oklch(.439 0 0);
  }
  
  html {
    font-size: var(--font-size);
  }
  
  .article-content h3 {
    color: oklch(.145 0 0);
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  .article-content p {
    color: oklch(.4 0 0);
    margin-bottom: 1.5rem;
    line-height: 1.8;
  }
  
  .article-content p:first-of-type {
    font-size: 1.125rem;
  }
  
  @property --tw-rotate-x {
    syntax: "*";
    inherits: false;
    initial-value: rotateX(0);
  }
  
  @property --tw-rotate-y {
    syntax: "*";
    inherits: false;
    initial-value: rotateY(0);
  }
  
  @property --tw-rotate-z {
    syntax: "*";
    inherits: false;
    initial-value: rotateZ(0);
  }
  
  @property --tw-skew-x {
    syntax: "*";
    inherits: false;
    initial-value: skewX(0);
  }
  
  @property --tw-skew-y {
    syntax: "*";
    inherits: false;
    initial-value: skewY(0);
  }
  
  @property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
  }
  
  @property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
  }
  
  @property --tw-gradient-position {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
  }
  
  @property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
  }
  
  @property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
  }
  
  @property --tw-gradient-stops {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
  }
  
  @property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
  }
  
  @property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
  }
  
  @property --tw-leading {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-font-weight {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
  }
  
  @property --tw-shadow-color {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
  }
  
  @property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
  }
  
  @property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
  }
  
  @property --tw-ring-color {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
  }
  
  @property --tw-inset-ring-color {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
  }
  
  @property --tw-ring-inset {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0;
  }
  
  @property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
  }
  
  @property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
  }
  
  @property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
  }
  
  @property --tw-backdrop-blur {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-backdrop-invert {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-duration {
    syntax: "*";
    inherits: false
  }
  
  @property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
  }
  
  @property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
  }
  
  @property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
  }
  
  @property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1;
  }
  
  @property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1;
  }
  
  @property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1;
  }
  